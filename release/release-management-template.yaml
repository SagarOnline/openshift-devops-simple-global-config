apiVersion: v1
kind: Template
labels:
  template: release-management-template
message: |-
  A Jenkins server must be instantiated in this project to manage
  the Pipeline BuildConfig created by this template.  
metadata:
  annotations:
    openshift.io/display-name: Release Management Template
    description: |-
      This template defines a release for application, processing a template will  
      1. create a Rollout pipeline for Dev environment of specified application and version. 
         Refer BuildConfig having name ${APP_NAME}-${RELEASE_NAME}-dev-rollout
      2. TODOs : update description as more features are added into this template.
    iconClass: icon-jenkins
    tags: instant-app,jenkins
  name: release-management-template
parameters:
- description: The name of the application to which this template belongs. It should not have any whitespaces. for e.g. marketdata, accounts, etc.
  displayName: Application Name
  name: APP_NAME
  required: true
- description: The release name of the application. for e.g. v1, v2, apple, banana, cherry , etc
  displayName: Release Name
  name: RELEASE_NAME
  required: true
- description: Constant to use for Dev Environment 
  displayName: Dev environment name
  name: DEV_ENV_NAME
  required: true
  value: dev
- description: Git repository url of the application configuration where all DevOps configuration are maintained such as Jenkinsfiles, parameters, etc.
  displayName: Git repository URL of Application Config
  name: APP_CONFIG_GIT_REPO
  required: true
- description: Git repository url of the application source code 
  displayName: Git repository URL of Application source code
  name: APP_SOURCE_GIT_REPO
  required: true
- description: Path of Jenkinsfile for Rollout pipeline.  It should be relative to the context directory specified by 'APP_CONFIG_GIT_REPO' param.. 
  displayName: Path of Rollout pipeline jenkinsfile
  name: DEV_ROLLOUT_JENKINSFILE_PATH
  required: true
- description: Path of Jenkinsfile to build application code. It should be relative to the context directory specified by 'APP_CONFIG_GIT_REPO' param.
  displayName: Path of Jenkinsfile to build application code
  name: BUILD_JENKINSFILE_PATH
  required: true
- description: Name of secret to be used by build pipeline (BuildConfig Trigger) for Github webhook.
  displayName: Secret name used by build pipeline Github trigger
  name: APP_SOURCE_GIT_REPO_SECRET_NAME
  required: true
  
objects:

# Release pipeline for Dev environment. It will trigger the Jenkins pipeline to release application built by Build pipeline. 
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
      release: ${DEV_ENV_NAME}-${RELEASE_NAME}
      environment: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}
    name: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}-rollout
  spec:
    source:
      git:
        uri: ${APP_CONFIG_GIT_REPO}
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfilePath: ${DEV_ROLLOUT_JENKINSFILE_PATH}
        env:
        - name: APP_CONFIG_GIT_REPO
          value: ${APP_CONFIG_GIT_REPO}
        - name: RELEASE_NAME
          value: ${RELEASE_NAME}
        - name: DEV_ENV_NAME
          value: ${DEV_ENV_NAME}
      type: JenkinsPipeline

# Build Pipeline definition. It will trigger the Jenkins pipeline to build application code. 
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
      release: ${DEV_ENV_NAME}-${RELEASE_NAME}
    name: ${APP_NAME}-${RELEASE_NAME}-${DEV_ENV_NAME}-build
  spec:
    source:
      git:
        uri: ${APP_CONFIG_GIT_REPO}
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfilePath: ${BUILD_JENKINSFILE_PATH}
        env:
        - name: APP_SOURCE_GIT_REPO
          value: ${APP_SOURCE_GIT_REPO}
        - name: APP_CONFIG_GIT_REPO
          value: ${APP_CONFIG_GIT_REPO}
        - name: APP_NAME
          value: ${APP_NAME}
        - name: RELEASE_NAME
          value: ${RELEASE_NAME}
        - name: APP_SOURCE_GIT_REPO_SECRET_NAME
          value: ${APP_SOURCE_GIT_REPO_SECRET_NAME}  
      type: JenkinsPipeline
    triggers:
    - github:
        secret: ${APP_SOURCE_GIT_REPO_SECRET_NAME}
      type: GitHub